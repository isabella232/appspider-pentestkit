/* Author: Denis Podgurskii */

export class ptk_controller_index {

    async init() {
        let self = this
        return browser.runtime.sendMessage({ channel: "ptk_popup2background_tabs", type: "get_active_tab" })
            .then(function (tab) {
                Object.assign(self, tab)
                return browser.tabs.sendMessage(self.tabId, { channel: "ptk_popup2content", type: "init" })
                    .then(response => {
                        self.wappalyzer = response
                        return self.complete()
                    })
            })
    }

    async complete() {
        let self = this
        return browser.runtime.sendMessage({ channel: "ptk_popup2background_tabs", type: "analyze", info: this.wappalyzer })
            .then(response => {
                return Object.assign(self, response)
            })
    }

    async clear() {
        return browser.runtime.sendMessage({ channel: "ptk_popup2background_tabs", type: "clear" })
            .then(response => {
                return response
            })
    }

    async activate() {
        return browser.runtime.sendMessage({ channel: "ptk_popup2background_tabs", type: "activate" })
            .then(response => {
                return response
            })
    }

    async deactivate() {
        return browser.runtime.sendMessage({ channel: "ptk_popup2background_tabs", type: "deactivate" })
            .then(response => {
                return response
            })
    }

    async getFrame(frameIndex) {
        return browser.runtime.sendMessage({ channel: "ptk_popup2background_tabs", type: "get_frame", frameIndex: frameIndex })
            .then(response => {
                return response
            })
    }

    async getAllFrames(frameIndex) {
        return browser.runtime.sendMessage({ channel: "ptk_popup2background_tabs", type: "get_all_frames", frameIndex: frameIndex })
            .then(response => {
                return response
            })
    }

    async getRequest(frameId, requestId, index) {
        return browser.runtime.sendMessage({ channel: "ptk_popup2background_tabs", type: "get_request_details", frameId: frameId, requestId: requestId, index: index })
            .then(response => {
                return response
            })
    }
    
}
