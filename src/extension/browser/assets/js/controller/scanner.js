/* Author: Denis Podgurskii */
export class ptk_controller_scanner {
    
    async runScan(formId) {
        var $form = $('#' + formId + ' #request_form')
        var values = $form.form('get values')
        $form.form('validate form')

        if ($form.form('is valid')) {
            try {

                if ($.fn.dataTable.isDataTable('#tbl_attacks')) {
                    var table = $('#tbl_attacks').DataTable()
                    table.clear().draw()
                }

                var schema = ptk_app.request.parseRawRequest(values)
                ptk_app.runScan(schema)
                $('#dialogResponseAttack').modal('show')
            } catch (e) {
                $('#traffic_error_message').text(e)
                $('.mini.modal').modal('show')
            }
        }
    }


    async bindAttacks() {
        if (ptk_app.scan.scanResult.length <= 0) return


        var dt = new Array()
        //create data source
        ptk_app.scan.scanResult.forEach((item, key) => {
            var i = 0, data = {}, ip = ''
            dt.push(['', key, item.baseUrl, item.success, item.attack.description])
        })

        //move to jquery stuff
        var params = {
            "data": dt,
            "columns": [{
                render: function (data, type, row) {
                    return '<i class="expandchild plus square icon"></i>'
                },
                "className": "one wide"
            },
            { "visible": false }, { "visible": false },
            {
                title: "Success",
                render: function (data, type, row) {
                    return (data ? '<img class="ui mini image" src="assets/images/success.png" >' : '<i class="minus large icon" style="padding-left:10px"></i>')
                }, "className": "one wide"

            }, { title: "Description" }]
        };


        var table = bindTable('#tbl_attacks', params)
        $('.expandchild.plus.icon').off("click")
        $('.expandchild.plus.icon').on('click', function (e) {
            var tr = $(this).closest('tr'),
                row = table.row(tr),
                values = table.row($(this).parents('tr')).data(),
                baseURI = values[2]

            if (row.child.isShown()) {
                // This row is already open - close it
                row.child.hide()
                $(this).removeClass('shown minus')
                $(this).addClass('shown plus')
            } else {
                // Open this row
                row.child(
                    `<div>
                        <div class="ui message">
                            <b>Proof</b>: ` + ptk_app.scan.scanResult[values[1]].proof + `
                        </div>
                        
                        <form class="ui tiny form">
                            <div class="fields attackRequestResponse" >
                                <div class="eight wide field">
                                    <div class="field" style="position: relative;">
                                        <textarea name="request" class="ui small input" rows="15" placeholder="Request"
                                            style="padding: 5px 0px 0px 5px; width:99%">` + ptk_app.scan.scanResult[values[1]].request + `</textarea>
                                    </div>
                                </div>
                                <div class="eight wide field" >
                                    <div class="field">
                                        <div class="field" style="position: relative;">
                                            <button tabindex="-1" class="ui mini secondary button showAttackResponseHtml"
                                                style="position: absolute;top: 0px;z-index: 1;right: -6px;">HTML</button>
                                            <textarea name="response_body" class="ui small input attackResponse" rows="15"
                                                placeholder="Response "
                                                style="padding: 5px 0px 0px 5px;width:99%">` + atob(ptk_app.scan.scanResult[values[1]].response) + `</textarea>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="attackResponseHtmlBox" style="display:none">
                                
                                <div class="ui segment">
                                <i class="close large icon" style="margin-right: -5px;margin-top: -10px;"></i>
                                <iframe class="attackResponseHtmlFrame" frameborder="1"
                                style="overflow:hidden;height:100%;width:100%; min-height: 200px;" height="100%"
                                width="100%"></iframe>
                                </div>
                            </div>
                        </form>
              

                    </div>`
                ).show()

                $(this).removeClass('shown plus')
                $(this).addClass('shown minus')

                $('.showAttackResponseHtml').off("click")
                $('.showAttackResponseHtml').on('click', function (e) {

                    var htmlString = $(this).closest('.fields.attackRequestResponse').find('.attackResponse').val()
                    htmlString = htmlString.replace(/<(head)(.+)?>/, "<$1$2><base href='" + baseURI + "' />")
                    var dataBase64 = 'data:text/html;base64,' + btoa(unescape(encodeURIComponent(htmlString)))

                    const blob = new Blob([unescape(encodeURIComponent(htmlString))], { type: 'text/html' })
                    var srcData = URL.createObjectURL(blob)

                    $(this).closest('.fields.attackRequestResponse').hide()
                    $(this).closest('.form').find('.attackResponseHtmlFrame').prop('src', dataBase64)
                    $(this).closest('.form').find('.attackResponseHtmlBox').show()

                    $(this).closest('.form').find('.close').on('click', function (e) {
                        $(this).closest('.form').find('.attackResponseHtmlBox').hide()
                        $(this).closest('.form').find('.attackRequestResponse').show()
                    })
                    return false
                })
            }
        })
    }
    
}