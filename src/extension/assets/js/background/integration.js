/* Author: Denis Podgurskii */

export class ptk_integration {
    constructor(channel) {
        this.channel = channel
        this.addMessageListeners()
        this.addListiners()
    }

    /* Listeners */

    addListiners() {
        this.onUpdated = this.onUpdated.bind(this)
        browser.tabs.onUpdated.addListener(this.onUpdated)
    }

    removeListiners() {
        browser.tabs.onUpdated.removeListener(this.onUpdated)
    }

    onUpdated(tabId, info, tab) {
        if (info.status != "complete") return
        browser.tabs.executeScript(tabId, {
            code: "window.ptk_integration_channel = '" + this.channel + "';",
            matchAboutBlank: true, allFrames: false, runAt: "document_start"
        }).then(function () {
            browser.tabs.executeScript(tabId, {
                file: "assets/js/content/integration.js",
                matchAboutBlank: true, allFrames: false, runAt: "document_start"
            })
        }).catch(e => console.log(e))
    }

    addMessageListeners() {
        this.onMessage = this.onMessage.bind(this)
        browser.runtime.onMessage.addListener(this.onMessage)
    }

    onMessage(message, sender, sendResponse) {
        if (message.channel == this.channel) {

            let response = null
            if (this["msg_" + message.type]) {
                response = this["msg_" + message.type](message)
            }
            if (sendResponse) {
                sendResponse(response)
            }
            return Promise.resolve({ result: false })
        }
    }



}


