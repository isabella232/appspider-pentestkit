/* Author: Denis Podgurskii */
import { ptk_utils } from "./utils.js"
import { ptk_settings } from "./settings.js"
import { ptk_recorder } from "./recorder.js"
import { ptk_tabs } from "./tab.js"
import { ptk_scan } from "./scan.js"
import { ptk_request } from "./request.js"

export class ptk_app {
    constructor() {
        this.isFirefox = ptk_utils.isFirefox
        this.pentestkitRequest = { cookie: {}, statusLine: "", headers: new Map() }
        this.recorder = new ptk_recorder()
        this.settings = new ptk_settings()
        this.tabs = new ptk_tabs()
        this.request = new ptk_request()

        this.filterType = ["main_frame", "sub_frame", "stylesheet", "script", "image", "font", "object", "xmlhttprequest", "ping", "csp_report", "media", "websocket", "other"]
        this.extraHeaders = this.isFirefox ? [] : ["extraHeaders"]
        this._observe()
        this.addListeners()
    }

    _observe() {
        this.settings = new Proxy(this.settings, {
            set: function (target, key, value) {
                // window.ptk_app.tabs = new ptk_tabs(settings.settings.main.general.max_tabs,
                //     settings.settings.main.general.max_requests_per_tab)
                //console.log(target)
                //console.log(`The property ${key} has been updated with ${value}`);
                return true;
            }
        })
        var settings = this.settings
        browser.storage.local.get('pentestkit_settings').then(function (result) {
            // console.log("observe storage")
            // console.log(result.pentestkit_settings)
            if (result.pentestkit_settings) {
                settings.mergeSettings(result.pentestkit_settings)
            }
        })
    }

    openInNewWindow() {
        browser.windows.create({ url: browser.extension.getURL("browser/index.html"), type: "popup" })
    }

    runScan(schema) {
        this.scan = new ptk_scan(this.request)
        this.scan.runScan(schema)
    }

    addListeners() {
        
    }

    removeListeners() {
        
    }
}

