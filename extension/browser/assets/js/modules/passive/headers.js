/* Author: Denis Podgurskii */
'use strict';


var headersFindings = {
    findings: {},
    data: {
        'X-XSS-Protection': []
    },

    checkSecurityHeaders: function (tabObj) {
        this.findings = new Array();
        this.data = {
            'X-XSS-Protection': [],
            'X-Content-Type-Options': [],
            'Strict-Transport-Security': [],
            'X-Powered-By': [],
            'X-Frame-Options': []
        };
        var parser = document.createElement('a');
        parser.href = tabObj.tab.url;
        var mainHost = parser.hostname;

        tabObj.frames.forEach(function (frame) {
            frame.forEach(function (requests) {
                requests.forEach((request) => {
                    parser = document.createElement('a');
                    parser.href = request.url;
                    if (mainHost == parser.hostname) {
                        var headers = {};
                        if (request.responseHeaders) {
                            request.responseHeaders.forEach(function (item) {
                                headers[item.name.toLowerCase()] = item.value.toLowerCase();
                            });
                            headersFindings.applyRules(headers, request);
                        }
                    }
                });
            });
        });

        if (this.data['X-XSS-Protection'].length > 0)
            this.findings.push(['X-XSS-Protection', 'The X-XSS-Protection HTTP response header not found', this.data['X-XSS-Protection'].join("<br/>")]);
        if (this.data['X-Content-Type-Options'].length > 0)
            this.findings.push(['X-Content-Type-Options', 'The X-Content-Type-Options HTTP response header not found or it has wrong value', this.data['X-Content-Type-Options'].join("<br/>")]);
        if (this.data['Strict-Transport-Security'].length > 0)
            this.findings.push(['Strict-Transport-Security', 'Strict-Transport-Security header not found in the response from HTTPS site', this.data['Strict-Transport-Security'].join("<br/>")]);
        if (this.data['X-Powered-By'].length > 0)
            this.findings.push(['X-Powered-By', 'X-Powered-By HTTP header reveals the server configuration', this.data['X-Powered-By'].join("<br/>")]);
        if (this.data['X-Frame-Options'].length > 0)
            this.findings.push(['X-Frame-Options', 'X-Frame-Options header not found or it has wrong value', this.data['X-Frame-Options'].join("<br/>")]);

    },

    applyRules: function (headers, request) {
        if (headers['content-type'] && headers['content-type'].includes('text/html')) {
            if (!headers['x-xss-protection'] && !this.data['X-XSS-Protection'].includes(request.url)) {
                this.data['X-XSS-Protection'].push(request.url);
            }
            if ((!headers['x-content-type-options'] || headers['x-content-type-options'] != 'nosniff') && !this.data['X-Content-Type-Options'].includes(request.url)) {
                this.data['X-Content-Type-Options'].push(request.url);
            }
            if (request.url.startsWith('https://') && !headers['strict-transport-security'] && !this.data['Strict-Transport-Security'].includes(request.url)) {
                this.data['Strict-Transport-Security'].push(request.url);
            }
            if (headers['x-powered-by'] && !this.data['X-Powered-By'].includes(request.url)) {
                this.data['X-Powered-By'].push(request.url);
            }
            if (!headers['x-frame-options'] && !this.data['X-Frame-Options'].includes(request.url) ) {
                if(!this.data['X-Frame-Options'].includes('allow-from') || (headers['x-frame-options'] != 'deny' && headers['x-frame-options'] != 'sameorigin') )
                    this.data['X-Frame-Options'].push(request.url);
            }
        }
    }
};