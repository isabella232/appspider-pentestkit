/* Author: Denis Podgurskii */
'use strict';

$(document).ready(function () {
    var editor = CodeMirror.fromTextArea(document.getElementById('recording_output'), {
        lineNumbers: true,
        mode: "application/xml",
        indentUnit: 6,
        scrollbarStyle: null
    });
    editor.setSize('auto', '500px');

    var $form = $('#traffic_form');
    $form.form({
        fields: {
            url: {
                identifier: 'url',
                rules: [{
                    type: 'regExp',
                    value: /^((http|https):\/\/){1}(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])?(:+[0-9]+)?([\/\?]{1}.*)?$/i,
                }]
            },
            min_duration: {
                identifier: 'min_duration',
                rules: [{
                    type: 'integer',
                    prompt: 'Please enter an integer value'
                }]
            },
        }
    });
    $form.form('set value', 'element_path', bgProxy.Recorder.elementPath);
    $form.form('set value', 'min_duration', bgProxy.Recorder.minDuration);

    chrome.tabs.query({
        active: true,
        lastFocusedWindow: true
    }, function (tabs) {
        var tab = tabs[0];
        $form.form('set value', 'url', tab.url);
    });


    $('.start').on('click', function () {
        $form.form('validate form');
        if (!$form.form('is valid')) return;

        bgProxy.Recorder.cleanCookie = false;
        var values = $form.form('get values');
        bgProxy.Recorder.startTraffic({ start_url: values['url'] });
    });

    $('.start_clean_cookie').on('click', function () {
        $form.form('validate form');
        if (!$form.form('is valid')) return;

        bgProxy.Recorder.cleanCookie = true;
        var values = $form.form('get values');
        bgProxy.Recorder.startTraffic({ start_url: values['url'] });
    });

    $('.reset_recording').on('click', function () {
        $form.form('set value', 'recording_output', '');
        editor.setValue('');
        bgProxy.Recorder.reset();
    });

    


    ///////// Traffic /////////
    $('.traffic_export').on('click', function () {
        var harLog = bgProxy.Exporter.renderHar(bgProxy.Recorder.requests);
        if (harLog) {
            $form.form('set value', 'recording_output', JSON.stringify(harLog, null, 2));
            editor.setOption("mode", "javascript/json");
            editor.setValue(JSON.stringify(harLog, null, 2));
        }
    });

    $('.traffic_download').on('click', function () {
        $('.traffic_export').trigger('click');
        var blob = new Blob([editor.getValue()], { type: 'text/plain' });
        var values = $form.form('get values');
        var fName = "PenTestKitTraffic.har";

        var downloadLink = document.createElement("a");
        downloadLink.download = fName;
        downloadLink.innerHTML = "Download File";
        downloadLink.href = window.URL.createObjectURL(blob);
        downloadLink.click();
    });
});