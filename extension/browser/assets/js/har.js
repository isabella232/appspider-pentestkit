(function (perfCascade) {

    /** holder DOM element to render PerfCascade into */
    var outputHolderEl = document.getElementById("output")
    var pageSelectorEl = document.getElementById("page-selector")
    var outputHolder2El = document.getElementById("output2")
    var pageSelector2El = document.getElementById("page-selector2")
    var legendHolderEl = document.getElementById("legendHolder")

    function setup(options, fileinputId, outputHolder, harUrl) {
        /**
         * This is where the magic happens
         */
        function renderPerfCascadeChart(logData) {
            /** remove all children of `outputHolderEl`,
             * so you can upload new HAR files and get a new SVG  */
            while (outputHolder.childNodes.length > 0) {
                outputHolder.removeChild(outputHolder.childNodes[0])
            }

            /** pass HAR and options to `newPerfCascadeHar` to generate the SVG element*/
            var perfCascadeSvg = perfCascade.fromHar(logData, options)

            /** append SVG to page - that's it */
            outputHolder.appendChild(perfCascadeSvg)
        }


        /** handle client side file upload via file-reader */
        function onFileSubmit(evt) {
            var files = evt.target.files
            if (!files) {
                alert("Failed to load HAR file")
                return
            }

            // Just needed for zipped *.zhar files, you can use the standard FileReader api for normal .har files
            perfCascadeFileReader.readFile(files[0], evt.target.value, function (error, data) {
                if (error) {
                    console.error(error)
                } else {
                    renderPerfCascadeChart(data)
                }
            }, function(progress) {
                console.log("unzip progress: ", progress / 100, "%");
            })
        }

        if (window["fetch"]) {/** load an initial HAR when opening the page */
            window["fetch"](harUrl)
                .then(f => f.json().then(j => renderPerfCascadeChart(j.log)))
        }

        /** hook up file input events */
        document.getElementById(fileinputId).addEventListener("change", onFileSubmit, false)
    }

    //Source: http://www.webpagetest.org/result/151226_X7_b43d35e592fab70e0ba012fe11a41020/
    // window["fetch"]("test-data/www.bbc.co.uk.160529_8V_7R3.har")
    // window["fetch"]("test-data/www.bbc.com.har")
    setup({
            pageSelector: pageSelectorEl,
            legendHolder: legendHolderEl,
            showUserTiming: true,
            // showUserTimingEndMarker: true,
        }, "fileinput", outputHolderEl, "webscantest.com.har");

})(window.perfCascade)