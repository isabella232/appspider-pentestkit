/* Author: Denis Podgurskii */
'use strict';

chrome.runtime.onMessage.addListener(function (message, sender, sendResponse) {
    if (message.channel != "ptkPopupToContent") return;

    if (message.type == "init") {
        var meta = document.createElement('meta');
        meta.id = 'pentestkitMetaId';
        meta.content = message.responseHeaders;
        (document.head || document.documentElement).appendChild(meta);

        var sDict = document.createElement('script');
        sDict.onload = function () {
            var sDetector = document.createElement('script');
            sDetector.src = chrome.extension.getURL(message.detector);
            sDetector.id = "pentestkitDetectorId";
            (document.head || document.documentElement).appendChild(sDetector);
        };
        sDict.src = chrome.extension.getURL(message.dictionary);
        sDict.id = "pentestkitDictionaryId";
        (document.head || document.documentElement).appendChild(sDict);

        meta.addEventListener('ready', function (event) {

            var s = document.getElementById("pentestkitDictionaryId");
            s.parentNode.removeChild(s);
            s = document.getElementById("pentestkitDetectorId");
            s.parentNode.removeChild(s);
            var m = document.getElementById("pentestkitMetaId");
            m.parentNode.removeChild(m);

            // HTML
            var clientHtml = new XMLSerializer().serializeToString(document).split('\n');

            clientHtml = clientHtml
                .slice(0, 1000).concat(clientHtml.slice(clientHtml.length - 1000))
                .map(line => line.substring(0, 1000))
                .join('\n');

            // Scripts
            const clientScripts = Array.prototype.slice
                .apply(document.scripts)
                .filter(script => script.src)
                .map(script => script.src)
                .filter(script => script.indexOf('data:text/javascript;') !== 0);

            try {
                chrome.runtime.sendMessage({
                    channel: "ptkContentToPopup",
                    type: "complete",
                    apps: meta.content,
                    html: clientHtml,
                    scripts: clientScripts
                });
            } catch (e) { }
        });

        var appspiderScript = document.getElementById("pentestkitWSId");
        if (!appspiderScript && message.enable_appspider) {
            var sDict = document.createElement('script');
            sDict.src = chrome.extension.getURL('assets/js/appspider.js');
            sDict.id = "pentestkitAppSpiderId";
            (document.head || document.documentElement).appendChild(sDict);

            window.addEventListener("message", function (event) {
                if (event.data.channel == 'pentestkitAppSpiderChannel') {
                    if (event.data.function == 'validate') {
                        chrome.runtime.sendMessage(event.data);
                    }
                }

                //AppSpider 
                var message = event.data;
                if (message.messageType != 'AppSpiderMessage') return;

                var data = message.data;
                if (typeof data !== 'undefined' && typeof data['function'] !== 'undefined') {
                    var functionCall = data['function'];
                    switch (functionCall) {
                        case 'setPlugin':
                            chrome.runtime.sendMessage({ channel: "pentestkitAppSpiderChannel", data: data });
                            break;
                        case 'getVersion':
                            var params = data['parameters'];
                            console.assert(typeof params['eventName'] !== 'undefined',
                                "Function call 'getVersion' needs the plugin parameter.");
                            var manifest = chrome.runtime.getManifest();
                            if (manifest && manifest.version) {
                                var event = document.createEvent("CustomEvent");
                                event.initCustomEvent(params['eventName'], true, true, { 'version': manifest.version });
                                document.dispatchEvent(event);
                            }
                            break;
                    }
                }

            });
        }

        ///////////////////////////////////
        var ws = document.getElementById("pentestkitWSId");
        if (!ws && message.enable_websocket) {
            var script = document.createElement('script');
            script.textContent = "var extensionId = " + JSON.stringify(chrome.runtime.id);
            (document.head || document.documentElement).appendChild(script);
            script.parentNode.removeChild(script);

            var sWs = document.createElement('script');
            sWs.src = chrome.extension.getURL("assets/js/ws.js");
            sWs.id = "pentestkitWSId";
            (document.head || document.documentElement).appendChild(sWs);
        }
    }

});



/*
--------------------------------------------------
Backward compatibility with previous AppSec plugin
--------------------------------------------------
*/
// window.addEventListener("message", function (event) {
//     var message = event.data;
//     if(message.messageType != 'AppSpiderMessage') return;

//     var data = message.data;
//     if (typeof data !== 'undefined' && typeof data['function'] !== 'undefined') {
//         var functionCall = data['function'];
//         switch (functionCall) {
//             case 'setPlugin':
//                 chrome.runtime.sendMessage({ channel: "ptkContentToBackground", data: data });
//                 break;
//             case 'runValidate':
//                 console.log("runValidate called");
//                 var params = data['parameters'];
//                 console.assert(typeof params !== 'undefined', "Function call 'runValidate' needs parameters.");
//                 console.assert(typeof params['encoded_http_message'] !== 'undefined',
//                     "Function call 'runValidate' needs the encoded_http_message parameter.");
//                 var encoded_http_message = params['encoded_http_message'];
//                 chrome.storage.local.clear();
//                 console.log(encoded_http_message);
//                 chrome.storage.local.set({ encodedHTTPmessage: encoded_http_message });
//                 break;
//             case 'getVersion':
//                 var params = data['parameters'];
//                 console.assert(typeof params['eventName'] !== 'undefined',
//                     "Function call 'getVersion' needs the plugin parameter.");
//                 var manifest = chrome.runtime.getManifest();
//                 if (manifest && manifest.version) {
//                     var event = document.createEvent("CustomEvent");
//                     event.initCustomEvent(params['eventName'], true, true, { 'version': manifest.version });
//                     document.dispatchEvent(event);
//                 }
//                 break;
//             case 'stop':
//             case 'export':
//                 chrome.storage.sync.set({ activePlugin: 'macro' });
//                 var isInsightAppSec = document.title.match(/InsightAppSec/i);
//                 var useEncryption = true;
//                 if (isInsightAppSec) {
//                     useEncryption = false;
//                 }
//                 var channel = chrome.runtime.connect({ name: message.channelName });

//                 if (typeof AppSpiderMacroExporter === 'undefined') message.data.loadExportJS = true;
//                 else if (message.data.function === 'export') {
//                     channel.onMessage.addListener(function (msg) {
//                         document.getElementById(message.data.exportId).value = AppSpiderMacroExporter.render(msg, useEncryption);
//                     });
//                 }
//                 channel.postMessage(message);

//                 break;
//             default:
//                 chrome.storage.sync.get(null, function (result) {
//                     switch (result.activePlugin) {
//                         case 'validate':
//                             /*
//                              * TODO: Send a notification saying you need to enable
//                              *       the validate plugin from the options
//                              *
//                              * */
//                             var notify_option = {
//                                 type: 'basic',
//                                 iconUrl: 'assets/images/icon.png',
//                                 title: 'AppSpider chrome plugin',
//                                 message: 'The validate option was not set in the option page.'
//                             };
//                             chrome.notifications.create('select-active-plugin', notify_option);
//                             break;
//                         case 'bootstrap':
//                             chrome.runtime.connect({
//                                 name: message.channelName
//                             }).postMessage(message);
//                             break;
//                         case 'macro':
//                             var channel = chrome.runtime.connect({ name: message.channelName });

//                             if (typeof AppSpiderMacroExporter === 'undefined') message.data.loadExportJS = true;
//                             else if (message.data.function === 'export') {
//                                 channel.onMessage.addListener(function (msg) {
//                                     document.getElementById(message.data.exportId).value = AppSpiderMacroExporter.render(msg);
//                                 });
//                             }
//                             channel.postMessage(message);
//                             var message = {
//                                 channel: 'ptkRecorderToBackground',
//                                 data: message.data
//                             };
//                             chrome.runtime.sendMessage(message);

//                             break;
//                         default:
//                             if (_debug) console.log('Setting to default plugin: "Validate"');
//                             chrome.storage.sync.set({
//                                 activePlugin: 'validate'
//                             });
//                             break;
//                     }


//                 });
//                 break;
//         }
//     } else {
//         chrome.storage.sync.get(null, function (result) {
//             switch (result.activePlugin) {
//                 case 'validate':
//                     /*
//                     * TODO: Send a notification saying you need to enable
//                     *       the validate plugin from the options
//                     *
//                     * */
//                     var notify_option = {
//                         type: 'basic',
//                         title: 'AppSpider chrome plugin',
//                         message: 'The validate option was not set in the option page.'
//                     };
//                     chrome.notifications.create('select-active-plugin', notify_option);
//                     break;
//                 case 'bootstrap':
//                     chrome.runtime.connect({
//                         name: message.channelName
//                     }).postMessage(message);
//                     break;
//                 case 'macro':
//                     chrome.runtime.connect({
//                         name: message.channelName
//                     }).postMessage(message);
//                     break;
//                 default:
//                     if (_debug) console.log('Setting to default plugin: "Validate"');
//                     chrome.storage.sync.set({
//                         activePlugin: 'validate'
//                     });
//                     break;
//             }


//         });
//     }
// }, false);