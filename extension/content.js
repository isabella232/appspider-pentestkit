/* Author: Denis Podgurskii */
'use strict';

chrome.runtime.onMessage.addListener(function (message, sender, sendResponse) {
    if (message.channel != "ptkPopupToContent") return;

    if (message.type == "init") {
        var meta = document.createElement('meta');
        meta.id = 'pentestkitMetaId';
        meta.content = message.responseHeaders;
        (document.head || document.documentElement).appendChild(meta);

        var sDict = document.createElement('script');
        sDict.onload = function () {
            var sDetector = document.createElement('script');
            sDetector.src = chrome.extension.getURL(message.detector);
            sDetector.id = "pentestkitDetectorId";
            (document.head || document.documentElement).appendChild(sDetector);
        };
        sDict.src = chrome.extension.getURL(message.dictionary);
        sDict.id = "pentestkitDictionaryId";
        (document.head || document.documentElement).appendChild(sDict);

        meta.addEventListener('ready', function (event) {

            var s = document.getElementById("pentestkitDictionaryId");
            s.parentNode.removeChild(s);
            s = document.getElementById("pentestkitDetectorId");
            s.parentNode.removeChild(s);
            var m = document.getElementById("pentestkitMetaId");
            m.parentNode.removeChild(m);

            // HTML
            var clientHtml = new XMLSerializer().serializeToString(document).split('\n');

            clientHtml = clientHtml
                .slice(0, 1000).concat(clientHtml.slice(clientHtml.length - 1000))
                .map(line => line.substring(0, 1000))
                .join('\n');

            // Scripts
            const clientScripts = Array.prototype.slice
                .apply(document.scripts)
                .filter(script => script.src)
                .map(script => script.src)
                .filter(script => script.indexOf('data:text/javascript;') !== 0);

            try {
                chrome.runtime.sendMessage({
                    channel: "ptkContentToPopup",
                    type: "complete",
                    apps: meta.content,
                    html: clientHtml,
                    scripts: clientScripts
                });
            } catch (e) { }
        });

        var appspiderScript = document.getElementById("pentestkitAppSpiderId");
        if (!appspiderScript && message.enable_appspider) {
            var sDict = document.createElement('script');
            sDict.src = chrome.extension.getURL('assets/js/appspider.js');
            sDict.id = "pentestkitAppSpiderId";
            (document.head || document.documentElement).appendChild(sDict);

            window.addEventListener("message", function (event) {
                if (event.data.channel == 'pentestkitAppSpiderChannel') {
                    if (event.data.function == 'validate') {
                        chrome.runtime.sendMessage(event.data);
                    }
                }
            });
        }

        ///////////////////////////////////
        var ws = document.getElementById("pentestkitWSId");
        if (!ws && message.enable_websocket) {
            var script = document.createElement('script');
            script.textContent = "var extensionId = " + JSON.stringify(chrome.runtime.id);
            (document.head || document.documentElement).appendChild(script);
            script.parentNode.removeChild(script);

            var sWs = document.createElement('script');
            sWs.src = chrome.extension.getURL("assets/js/ws.js");
            sWs.id = "pentestkitWSId";
            (document.head || document.documentElement).appendChild(sWs);
        }
    }

});



/*
--------------------------------------------------
Backward compatibility with previous AppSec plugin
--------------------------------------------------
*/
// window.addEventListener("message", function (event) {
//     var message = event.data;
//     if (message.messageType != 'AppSpiderMessage') return;
//     var channelName = message.channelName;
//     var functionCall = message.data['function'];

//     if (channelName == 'AppSpiderMacro') {
//         switch (functionCall) {
//             case 'start':
//                 chrome.runtime.sendMessage({
//                     channel: 'pentestkitAppSpiderMacroChannel',
//                     function: 'start',
//                     parameters: { start_url: message.data.start_url }
//                 });
//                 break;

//         }

//     } else {
//         switch (functionCall) {
//             case 'getVersion':
//                 var params = message.data['parameters'];
//                 console.assert(typeof params['eventName'] !== 'undefined',
//                     "Function call 'getVersion' needs the plugin parameter.");
//                 var manifest = chrome.runtime.getManifest();
//                 if (manifest && manifest.version) {
//                     var event = document.createEvent("CustomEvent");
//                     event.initCustomEvent(params['eventName'], true, true, { 'version': manifest.version });
//                     document.dispatchEvent(event);
//                 }
//                 break;
//             default:
//                 break;
//         }
//     }

