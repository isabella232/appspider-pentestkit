/* Author: Denis Podgurskii */
'use strict';
////////////////////////////////////
/* SqlInjection attack module */
////////////////////////////////////

function SqlInjection(schema) {
    return {
        vulnRegex: "(\]\[(DB2|ODBC|OleDb|Oracle|SqlServer|MySQL)|mysql_fetch_|not a valid MySQL|not a legal PLSQL identifer|mysql_connect\(\)|(SELECT\s+[^:>]+\sFROM\s+[^:>]+\sWHERE\s+)|(at\s[[:alnum:]\/\._]+\sline\s\d+)|ociparse\(\):|must be a syntactically valid variable|CFSQLTYPE|Unknown column ['`]|Microsoft OLE DB Provider for SQL|SQL QUERY FAILURE:|Syntax error.{1,50}in query|Syntax error.{1,50}column|ORA-01722:|PostgreSQL query failed:|You have an error in your SQL syntax|Unclosed quotation mark|(quoted|terminated)[ \r\n]+.{1,100}(quoted|terminated)|sql syntax error|Syntax error in string in query expression|java\.sql\.SQLSyntaxErrorException|dao\.EmptyResultDataAccessException|System\.Data\.OleDb\.OleDbException|insert\s+into\s+['`][^\s]+|database\s+error|dberror.{0,70}|call[ ]+to[ ]+a[ ]+member[ ]+function[ ]+fetch_assoc\(\)[ ]+.{0,100}",
        attacks: [
            {
                id: "sqlinjection_1",
                description: "Single Quote SQL Injection",
                location: ['Path', 'Query', 'Post', 'Cookie'],
                attackValue: "'",
                position: "before",

            },
            {
                id: "sqlinjection_2",
                description: "Single Quote SQL Injection",
                location: ['Path', 'Query', 'Post', 'Cookie'],
                attackValue: "'",
                position: "after"
            },
            {
                id: "sqlinjection_3",
                description: "Double Quote SQL Injection",
                location: ['Path', 'Query', 'Post', 'Cookie'],
                attackValue: '"',
                position: "before"
            },
            {
                id: "sqlinjection_4",
                description: "Double Quote SQL Injection",
                location: ['Path', 'Query', 'Post', 'Cookie'],
                attackValue: '"',
                position: "after"
            }
        ]
    }
}; //end SqlInjection