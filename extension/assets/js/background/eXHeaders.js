/* Author: Denis Podgurskii */
'use strict';
////////////////////////////////////
/* XHeaders */
////////////////////////////////////
/*
{request: [ {header_name: "", header_value: "", matchstring: "", operation: "equals", part: "url", type: "add"} ] ,
 response:  [ {header_name: "", header_value: "", matchstring: "", operation: "equals", part: "url", type: "add"} ]}
*/
function eXHeaders() {
    this.headers = [];
    this.add = function (type, obj) {

        browser.storage.local.get('pentestkit_headers').then(function (result) {
            var arHeaders = { request: [], response: [] };
            if (result.pentestkit_headers) {
                arHeaders = result.pentestkit_headers;
            }
            if (type == 'request') {
                arHeaders.request[arHeaders.request.length] = obj;
            } else {
                arHeaders.response[arHeaders.response.length] = obj;
            }
            BackgroundProxy.eXHeaders.headers = arHeaders;
            browser.storage.local.set({ 'pentestkit_headers': arHeaders });
        });

    };

    this.clean = function (item) {
        browser.storage.local.get('pentestkit_headers').then(function (result) {
            var arHeaders = { request: [], response: [] };
            if (result.pentestkit_headers) {
                arHeaders = result.pentestkit_headers;
            }
            if (item.type == 'request') {
                arHeaders.request = [];
            } else {
                arHeaders.response = [];
            }
            BackgroundProxy.eXHeaders.headers = arHeaders;
            browser.storage.local.set({ 'pentestkit_headers': arHeaders });
        });
    };

    this.remove = function (item) {
        browser.storage.local.get('pentestkit_headers').then(function (result) {
            if (!result.pentestkit_headers) return;
            if (item.type == 'request') {
                result.pentestkit_headers.request.splice(item.index, 1);
            } else {
                result.pentestkit_headers.response.splice(item.index);
            }
            BackgroundProxy.eXHeaders.headers = result.pentestkit_headers;
            browser.storage.local.set({ 'pentestkit_headers': result.pentestkit_headers });
        });
    };

    this.getHeaders = function () {
        return BackgroundProxy.eXHeaders.headers;
    };

}; //end XHeaders